{"version":3,"sources":["assets/avatars/avatar.jpg","components/Comment/UserAvatar.tsx","components/DeleteIconButton/DeleteIconButton.tsx","components/Comment/Comment.tsx","utils/CustomDialog/CustomDialog.tsx","components/Form/Form.tsx"],"names":["module","exports","UserAvatar","props","className","src","user","avatarUrl","alt","name","DeleteIconButton","clickHandler","IconButton","aria-label","onClick","fontSize","Comment","comment","Card","date","CardHeader","avatar","Avatar","author","action","title","text","CustomDialog","open","handleClose","dialogTitle","dialogContent","cancelButtonText","okButtonText","Dialog","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","color","autoFocus","Form","setDataInLocalStorage","comments","localStorage","setItem","JSON","stringify","useState","setOpen","commentText","setCommentText","selectedIndex","setIndex","parse","getItem","setComments","onSubmit","event","preventDefault","dp","Date","toLocaleString","push","TextField","label","variant","value","onChange","e","target","handleInputChange","type","length","map","c","i","key","confirmDelete","list","splice"],"mappings":"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","file":"static/js/5.36416705.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.d2ded907.jpg\";","import React from 'react';\r\nimport { Author } from '../../interfaces/types';\r\n\r\ninterface UserAvatarProps {\r\n  user: Author\r\n}\r\n\r\nconst UserAvatar: React.FC<UserAvatarProps> = (props) => {\r\n  \r\n  return (\r\n    <img className=\"UserAvatar\"\r\n      src={props.user.avatarUrl}\r\n      alt={props.user.name}\r\n    />\r\n  );\r\n}\r\n\r\nexport default UserAvatar;","import React from \"react\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst DeleteIconButton: React.FC<{clickHandler: () => any}> = ({clickHandler}) => {\r\n\r\n    return (\r\n        <IconButton\r\n        className=\"delete-btn\"\r\n        aria-label=\"delete\"\r\n        onClick={clickHandler}\r\n      >\r\n        <DeleteIcon fontSize=\"small\" />\r\n      </IconButton>\r\n    );\r\n}\r\n\r\nexport default DeleteIconButton;","import React from 'react';\r\nimport './Comment.scss';\r\nimport UserAvatar from './UserAvatar';\r\nimport { CommentType } from '../../interfaces/types';\r\nimport { Card, CardHeader, Avatar } from '@material-ui/core';\r\nimport DeleteIconButton from '../DeleteIconButton/DeleteIconButton';\r\n\r\ninterface CommentProps {\r\n  comment: CommentType;\r\n  clickHandler: () => any\r\n}\r\n\r\nconst Comment: React.FC<CommentProps> = ({comment, clickHandler}) => {\r\n    return (\r\n      <Card className=\"Comment\">\r\n        <div className=\"comment-date\">{comment.date}</div>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar>\r\n              <UserAvatar user={comment.author} />\r\n            </Avatar>\r\n          }\r\n          action={<DeleteIconButton clickHandler={clickHandler} />}\r\n          title={comment.text}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  export default Comment;","import React from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, DialogContentText, Button } from '@material-ui/core';\r\n\r\ninterface DialogProps {\r\n    open: boolean;\r\n    handleClose: (confirmDelete: boolean) => any;\r\n    dialogTitle: string;\r\n    dialogContent: string;\r\n    cancelButtonText: 'Cancel' | 'No';\r\n    okButtonText: 'Confirm' | 'OK' | 'Yes';\r\n}\r\n\r\nconst CustomDialog: React.FC<DialogProps> = ({open, handleClose, dialogTitle, dialogContent, cancelButtonText, okButtonText}) => {\r\n\r\n    return (\r\n    <Dialog aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">{dialogTitle}</DialogTitle>\r\n      <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {dialogContent}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => handleClose(true)} color={okButtonText === 'Confirm' ? \"secondary\" : \"primary\"} autoFocus>\r\n            {okButtonText}\r\n          </Button>\r\n          <Button onClick={() => handleClose(false)} color=\"default\">\r\n            {cancelButtonText}\r\n          </Button>\r\n        </DialogActions>   \r\n    </Dialog>\r\n    );\r\n}\r\n\r\nexport default CustomDialog;","import React, { useState } from \"react\";\r\nimport \"./Form.scss\";\r\nimport { TextField, IconButton } from \"@material-ui/core\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Comment from \"../Comment/Comment\";\r\nimport { CommentType } from \"../../interfaces/types\";\r\nimport dp from '../../assets/avatars/avatar.jpg';\r\nimport CustomDialog from \"../../utils/CustomDialog/CustomDialog\";\r\n\r\nconst Form: React.FC = () => {\r\n  const COMMENST_DB_KEY = 'comments';\r\n  \r\n  // get data from local storage\r\n  const getDataFromLocalStorage = () => {\r\n    return JSON.parse(localStorage.getItem(COMMENST_DB_KEY) || '[]');\r\n  }\r\n\r\n  // set data in local storage\r\n  const setDataInLocalStorage = (comments: any[]) => {\r\n    localStorage.setItem(COMMENST_DB_KEY, JSON.stringify(comments));\r\n  }\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [commentText, setCommentText] = useState('');\r\n  const [selectedIndex, setIndex] = useState(-1);\r\n  const [comments, setComments] = useState((getDataFromLocalStorage() || []) as CommentType[]);\r\n\r\n  // handle comment change\r\n  // const handleInputChange = (e: any, index: number) => {\r\n  //     const { name, value } = e.target;\r\n  //     const list: any = [...comments];\r\n  //     list[index][name] = value;\r\n  //     setComments(list);\r\n  //   };\r\n\r\n  // handle comment change\r\n  const handleInputChange = (e: any) => {\r\n    const { value } = e.target;\r\n    setCommentText(value)\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const openRemoveDialog = (index: number) => {\r\n    setIndex(index);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleRemoveClick = (confirmDelete: boolean) => {\r\n    if(confirmDelete){\r\n      const list = [...comments];\r\n      list.splice(selectedIndex, 1);\r\n      setDataInLocalStorage(list);\r\n      setComments(list);\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  // handle submit/click event of the Add button\r\n  const handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n    const comment: any = {};\r\n    comment.text = commentText;\r\n    comment.author = {\r\n      name: \"Ovais\",\r\n      avatarUrl: dp,\r\n    };\r\n    comment.date = new Date().toLocaleString();\r\n    comments.push(comment);\r\n    setDataInLocalStorage(comments);\r\n    setComments(comments);\r\n    setCommentText('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"Form\">\r\n      <h3>Add a comment:</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          className=\"comment-input\"\r\n          label=\"Comment\"\r\n          variant=\"outlined\"\r\n          value={commentText}\r\n          onChange={(e: any) => handleInputChange(e)}\r\n        />\r\n        <IconButton className=\"add-btn\" color=\"primary\" type=\"submit\">\r\n          <SendIcon />\r\n        </IconButton>\r\n      </form>\r\n      <ul className=\"field-list\">\r\n        {comments.length > 0 &&\r\n          comments.map((c, i) => {\r\n            return (\r\n              <li key={i}>\r\n                <Comment comment={c} clickHandler={() => openRemoveDialog(i)} />\r\n              </li>\r\n            );\r\n          })}\r\n      </ul>\r\n      <CustomDialog\r\n        open={open}\r\n        handleClose={handleRemoveClick}\r\n        dialogTitle=\"Delete Comment\"\r\n        dialogContent=\"Are you sure want to delete this comment?\"\r\n        okButtonText=\"Confirm\"\r\n        cancelButtonText=\"Cancel\"\r\n       />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"sourceRoot":""}